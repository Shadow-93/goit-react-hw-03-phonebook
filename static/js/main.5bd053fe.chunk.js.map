{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/ContactForm/ContactForm.js","components/ConatctList/ContactListItem/ContactListItem.js","components/ConatctList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","components/App/App.js","index.js","components/ConatctList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Input","state","name","number","onInputSubmit","e","preventDefault","props","onAddContact","setState","onInputChange","target","value","this","className","s","section","form","onSubmit","lable","input","type","onChange","button","Component","ContactListItem","onRemove","listItem","onClick","ContactList","contacts","onRemoveContact","list","map","contact","id","key","Filter","onSearchFilter","text","filterInput","Notification","title","App","filter","addContact","some","toLowerCase","alert","uuidv4","prevState","removeContact","contactId","searchFilter","getContacts","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","findContact","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5bd053fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3TGFE\",\"lable\":\"ContactForm_lable__23W4I\",\"input\":\"ContactForm_input__1Ss00\",\"button\":\"ContactForm_button__H-K_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__T2fB7\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default class Input extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onInputSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <section className={s.section}>\r\n        <form className={s.form} onSubmit={this.onInputSubmit}>\r\n          <label className={s.lable}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.onInputChange}\r\n              name=\"name\"\r\n            ></input>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"number\"\r\n              value={number}\r\n              onChange={this.onInputChange}\r\n              name=\"number\"\r\n            ></input>\r\n          </label>\r\n\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"../ContactList.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li className={s.listItem}>\r\n    {`${name}: ${number}`}\r\n    <button type=\"button\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map((contact) => {\r\n        const { name, number, id } = contact;\r\n\r\n        return (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onRemove={() => onRemoveContact(id)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ onSearchFilter }) => {\r\n  return (\r\n    <div>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        onChange={(e) => onSearchFilter(e.target.value)}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onSearchFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ title }) => <h2 className={s.title}>{title}</h2>;\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ConatctList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem(\"contacts\");\r\n    if (savedContacts) {\r\n      return this.setState({ contacts: JSON.parse(savedContacts) }) || [];\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      return localStorage.setItem(\r\n        \"contacts\",\r\n        JSON.stringify(this.state.contacts) || []\r\n      );\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n\r\n    const contactAlert = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    if (contactAlert) {\r\n      alert(`${name} is already exists!`);\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  searchFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const findContact = this.getContacts();\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 0 ? (\r\n          <Filter value={filter} onSearchFilter={this.searchFilter} />\r\n        ) : (\r\n          <Notification title={\"Please add contact\"} />\r\n        )}\r\n\r\n        <ContactList\r\n          contacts={findContact}\r\n          onRemoveContact={this.removeContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Yiya5\",\"listItem\":\"ContactList_listItem__1bU2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2azeX\",\"text\":\"Filter_text__38a7E\"};"],"sourceRoot":""}